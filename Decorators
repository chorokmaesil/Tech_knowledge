Decorators? 

데코레이터란? 
파이썬에서 매우 중요하게 여겨지는 작업이다.
간단하게 설명하면 다른 함수의 기능을 조작할 수 있다. 코드를 간결하고 더 파이썬답게 만들어준다.

데코레이터를 이해하려면 3가지 개념을 알고 있어야 한다.
1. 함수 내에서 함수 정의하기
2. 함수 내에서 함수 반환 
3. 함수를 다른 함수의 인자로 지정

def a_new_decorator(a_func):
  def wrapTheFunction():
    print "a_function_requiring_decoration()가 실행되기 전에 좀 지루한 일을 먼저 해야합니다"

    a_func()

    print "a_function_requiring_decoration()가 실행된 후에 좀 지루한 일을 해야합니다"
  return wrapTheFunction()

def a_function_requiring_decoration():
  print "저는 고약한 냄새를 없애기 위해 뭔가 추가된 함수입니다"

a_function_requiring_decoration()
#outputs: "저는 고약한 냄새를 없애기위해 뭔가 추가된 함수입니다"

a_function_requiring_decoration = a_new_decorator(a_function_requiring_decoration)
#이제 wrapTheFunction()에 a_function_requiring_decoration이 들어갔습니다.

...작성중...

a_function_requiring_decoration()
#outputs: "a_function_requiring_decoration()가 실행되기 전에 좀 지루한 일을 먼저 해야합니다"
#       "저는 고약한 냄새를 없애기위해 뭔가 추가된 함수입니다"
#       "a_function_requiring_decoration()가 실행된 후에 좀 지루한 일을 해야합니다"
